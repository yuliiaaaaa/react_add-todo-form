{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","_ref","user","_jsx","className","href","concat","children","TodoInfo","todo","_jsxs","cn","TodoList","todos","map","App","getUserById","usersFromServer","find","todosFromServer","getNextPostId","todosArr","Math","max","setTitle","useState","setUserId","setTodosArr","titleError","setTitleError","userError","setUserError","requiredFields","action","method","onSubmit","event","newPost","preventDefault","type","value","placeholder","onChange","filteredTitle","target","replace","disabled","userObj","ReactDOM","render","document","getElementById"],"mappings":"0KAAe,GACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,2BC3DI,GACb,CACEH,GAAI,EACJI,MAAO,qBACPC,WAAW,EACXC,OAAQ,GAEV,CACEN,GAAI,GACJI,MAAO,kBACPC,WAAW,EACXC,OAAQ,GAEV,CACEN,GAAI,EACJI,MAAO,qCACPC,WAAW,EACXC,OAAQ,I,uBCVL,MAAMC,EAA4BC,IAAe,IAAd,KAAEC,GAAMD,EAChD,OACEE,cAAA,KAAGC,UAAU,WAAWC,KAAI,UAAAC,OAAYJ,EAAKN,OAAQW,SAClDL,EAAKR,QCDCc,EAA4BP,IAAe,IAAd,KAAEQ,GAAMR,EAChD,OACES,eAAA,WACE,UAASD,EAAKhB,GACdW,UAAWO,IAAG,WAAY,CAAE,sBAAuBF,EAAKX,YAAaS,SAAA,CAErEJ,cAAA,MAAIC,UAAU,kBAAiBG,SAAEE,EAAKZ,QACrCY,EAAKP,MAASC,cAACH,EAAQ,CAACE,KAAMO,EAAKP,WCR7BU,EAA4BX,IAAgB,IAAf,MAAEY,GAAOZ,EACjD,OACEE,cAAA,WAASC,UAAU,WAAUG,SAC1BM,EAAMC,KAAKL,GACVN,cAACK,EAAQ,CAACC,KAAMA,GAAK,GAAAH,OAASG,EAAKZ,MAAK,gBCLnCkB,EAAMA,KACjB,SAASC,EAAYjB,GACnB,OAAOkB,EAAgBC,MAAMhB,GAASA,EAAKT,KAAOM,KAAW,KAG/D,MAAMc,EAAQM,EAAgBL,KAAKL,IAAI,IAClCA,EACHP,KAAMc,EAAYP,EAAKV,YAGnBqB,EAAiBC,GACPC,KAAKC,OAAOF,EAASP,KAAKL,GAASA,EAAKhB,MAAO,GAKxDI,EAAO2B,GAAYC,mBAAS,KAC5B1B,EAAQ2B,GAAaD,mBAAS,IAC9BJ,EAAUM,GAAeF,mBAASZ,IAElCe,EAAYC,GAAiBJ,oBAAS,IACtCK,EAAWC,GAAgBN,oBAAS,GA2BrCO,GAAkBjC,IAAWF,EAsBnC,OACEa,eAAA,OAAKN,UAAU,MAAKG,SAAA,CAClBJ,cAAA,MAAAI,SAAI,kBAEJG,eAAA,QAAMuB,OAAO,aAAaC,OAAO,OAAOC,SAxB5C,SAAsBC,GANJC,MAOhBD,EAAME,iBAENP,GAAchC,GACd8B,GAAehC,GAEXmC,IAZYK,EAgBP,CACP5C,GAAI2B,EAAcC,GAClBxB,QACAC,WAAW,EACXC,SACAG,KAAMc,EAAYjB,IApBpB4B,EAAY,IAAIN,EAAUgB,IArB1Bb,EAAS,IACTE,EAAU,GACVG,GAAc,GACdE,GAAa,KA+CoDxB,SAAA,CAC7DG,eAAA,OAAKN,UAAU,QAAOG,SAAA,CACpBJ,cAAA,SACEoC,KAAK,OACLC,MAAO3C,EACP,UAAQ,aACR4C,YAAY,cACZC,SAnDWN,IACnB,MAAMO,EAAgBP,EAAMQ,OAAOJ,MAAMK,QACvC,4CAAyB,IAG3BrB,EAASmB,GACTd,GAAc,MA+CPD,GAAczB,cAAA,QAAMC,UAAU,QAAOG,SAAC,4BAGzCG,eAAA,OAAKN,UAAU,QAAOG,SAAA,CACpBG,eAAA,UACE,UAAQ,aACR8B,MAAOzC,EACP2C,SAnDUN,IAClBV,GAAWU,EAAMQ,OAAOJ,OACxBT,GAAa,IAiDgBxB,SAAA,CAErBJ,cAAA,UAAQqC,MAAM,IAAIM,UAAQ,EAAAvC,SAAC,kBAG1BU,EAAgBH,KAAKiC,GACpB5C,cAAA,UAAQqC,MAAOO,EAAQtD,GAAGc,SACvBwC,EAAQrD,MADqBqD,EAAQtD,SAM3CqC,GAAa3B,cAAA,QAAMC,UAAU,QAAOG,SAAC,4BAGxCJ,cAAA,UAAQoC,KAAK,SAAS,UAAQ,eAAchC,SAAC,WAI/CJ,cAACS,EAAQ,CAACC,MAAOQ,QCjHvB2B,IAASC,OAAO9C,cAACY,EAAG,IAAKmC,SAASC,eAAe,U","file":"static/js/main.bcfbca89.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todos } from '../../types/Todos';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todos;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': todo.completed })}\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n      {todo.user && (<UserInfo user={todo.user} />)}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todos } from '../../types/Todos';\n\ntype Props = {\n  todos: Todos[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo: Todos) => (\n        <TodoInfo todo={todo} key={`${todo.title}--todo`} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todos } from './types/Todos';\n\nexport const App = () => {\n  function getUserById(userId: number) {\n    return usersFromServer.find((user) => user.id === userId) || null;\n  }\n\n  const todos = todosFromServer.map((todo) => ({\n    ...todo,\n    user: getUserById(todo.userId),\n  }));\n\n  const getNextPostId = (todosArr: Todos[]) => {\n    const maxId = Math.max(...todosArr.map((todo) => todo.id)) + 1;\n\n    return maxId;\n  };\n\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [todosArr, setTodosArr] = useState(todos);\n\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n    setTitleError(false);\n    setUserError(false);\n  };\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const filteredTitle = event.target.value.replace(\n      /[^a-zA-Zа-яА-Я0-9\\s]/g, '',\n    );\n\n    setTitle(filteredTitle);\n    setTitleError(false);\n  };\n\n  const handleUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserError(false);\n  };\n\n  const onSubmit = (newPost: Todos) => {\n    setTodosArr([...todosArr, newPost]);\n  };\n\n  const requiredFields = !userId || !title;\n\n  function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n\n    setUserError(!userId);\n    setTitleError(!title);\n\n    if (requiredFields) {\n      return;\n    }\n\n    onSubmit({\n      id: getNextPostId(todosArr),\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    });\n    reset();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            value={title}\n            data-cy=\"titleInput\"\n            placeholder=\"Enter title\"\n            onChange={handleTitle}\n          />\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUser}\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map((userObj) => (\n              <option value={userObj.id} key={userObj.id}>\n                {userObj.name}\n              </option>\n            ))}\n          </select>\n\n          {userError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todosArr} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}